/*You will be given two strings, you have to find the longest common subsequence between them.

Implement the function int lcst( char *x, char *y, int m, int n ) which takes 4 arguments:
char *x  -  first string
char *y  -  second string
int m  -  length of first string
int n   -  length of second string 

You have to return the Longest Common Substring between the two strings.
Example

input: 
 9 ABCDEYABC
8 XYZABCKZ

output: 
 3

input: 
10 CHESSBOARD
5 BOARD

output: 
 5
code function 
*/
int lcs(int m, char *x, int n, char *y) 
{ 
    int dp[m + 1][n + 1]; 
    int i, j; 
   
    for (i = 0; i <= m; i++) 
    { 
        for (j = 0; j <= n; j++) 
        { 
            if(i == 0 || j == 0) 
                dp[i][j] = 0; 
            else if (x[i-1] == y[j-1]) 
                dp[i][j] = dp[i-1][j-1] + 1; 
            else
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]); 
        } 
    } 

    return dp[m][n]; 
}

int max(int a, int b) 
{  
    return (a > b) ? a : b;  
}